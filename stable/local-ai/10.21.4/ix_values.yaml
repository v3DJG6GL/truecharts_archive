image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0@sha256:eb0ce8cb424145ee6b5db89bbc0145b60efc3f9405b4340342ab63597b346ae1
ffmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0-ffmpeg-core@sha256:93ec9cb00550d2507022346a723b8268dfa1621107c3d00a7de15aa4a9d57891
cublasCuda12Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0-cublas-cuda12-core@sha256:1c34ca0f262f4e31ed24a850883941c0ea056e0619ab395ec91587516d8c75f0
cublasCuda12FfmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0-cublas-cuda12-ffmpeg-core@sha256:7ed0d6508c0f704cca685905fec103a819ac0928eaf9284301f71a0947ace994
cublasCuda11Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0-cublas-cuda11-core@sha256:4509f124cfe1c3c268822985c8c0cb7a6ca67a39b4ac2c5d832bd637cac1cf36
cublasCuda11FfmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0-cublas-cuda11-ffmpeg-core@sha256:7b33b5b9348d925aae9d72f75aa1e38352d3255c97e641eccaa87653c67be893
allInOneCuda12Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0-aio-gpu-nvidia-cuda-12@sha256:5996df0d48b735c0ee63c4be3a06d916f958635a5cea24549671f2c893e7c122
allInOneCuda11Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0-aio-gpu-nvidia-cuda-11@sha256:32dbe96227903f62d27766cc1c78c1211e3ea3e1460d0faf1b41ba6826085c03
allInOneCpuImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.23.0-aio-cpu@sha256:8d9ec4a840df09afeea35c46002af679d0bcbff9fd26a6351f5a9645f759a752
securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0
service:
  main:
    ports:
      main:
        protocol: http
        port: 8080
localai:
  # Specify a build type. Available: cublas, openblas, clblas.
  build_type: "openblas"
  debug: false
  cors: true
  cors_allow_origins: "*"
  galleries: []
  #  - name: model-gallery
  #    url: github:go-skynet/model-gallery/index.yaml
  preload_models: []
  #    url: github:go-skynet/model-gallery/gpt4all-j.yaml
  # UPLOAD_LIMIT
workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: http
              path: /readyz
            readiness:
              enabled: true
              type: http
              path: /readyz
            startup:
              enabled: true
              type: tcp
          imageSelector: image
          env:
            ADDRESS: ":{{ .Values.service.main.ports.main.port }}"
            MODELS_PATH: "{{ .Values.persistence.models.mountPath }}"
            IMAGE_PATH: "{{ .Values.persistence.images.mountPath }}"
            BUILD_TYPE: "{{ .Values.localai.build_type }}"
            # breaks chart if true, keep it false.
            REBUILD: false
            DEBUG: "{{ .Values.localai.debug }}"
            CORS: "{{ .Values.localai.cors }}"
            GALLERIES: "{{ toJson .Values.localai.galleries }}"
            PRELOAD_MODELS: "{{ toJson .Values.localai.preload_models }}"
            CORS_ALLOW_ORIGINS: "{{ .Values.localai.cors_allow_origins }}"
persistence:
  models:
    enabled: true
    mountPath: "/models"
  images:
    enabled: true
    mountPath: "/images"
portal:
  open:
    enabled: false
updated: true