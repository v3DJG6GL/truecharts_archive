image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1@sha256:6a83b8be47681e9bac6afed46687c0e866f29a6b3be20cac71c8d0ae96eb26c1
ffmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1-ffmpeg-core@sha256:ff7885927d2db4a1d012af8528e538e69e5b8cf65f31a0245df78f13241b2636
cublasCuda12Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1-cublas-cuda12-core@sha256:17adeaa600e2907d7f41da48214855851e8aaf9ed49b2b34590368350e259058
cublasCuda12FfmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1-cublas-cuda12-ffmpeg-core@sha256:d03837480c64812241e698f02f1db92476d92b9ced66501fa862c8831f127d28
cublasCuda11Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1-cublas-cuda11-core@sha256:48c993368130bc5f4f73e913f91d798bfe23c7b81a4213843056e49218a7ef9d
cublasCuda11FfmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1-cublas-cuda11-ffmpeg-core@sha256:97be63e65c96e72e9c5246384585f5a6346fae24c0b232dfabae878546759c7f
allInOneCuda12Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1-aio-gpu-nvidia-cuda-12@sha256:1b15e90429d2edcb24e2769fdef4430ba1a0a472952d119a8b5652ecc2668d26
allInOneCuda11Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1-aio-gpu-nvidia-cuda-11@sha256:523b6a79b04236135cc04227ab52ecff260402f49154de83e5744cba7a1159a5
allInOneCpuImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.24.1-aio-cpu@sha256:c1163ffb140b2efcdbce77e2451602e2b26f97fc1842957d2c9dcb8baa4df7c2
securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0
service:
  main:
    ports:
      main:
        protocol: http
        port: 8080
localai:
  # Specify a build type. Available: cublas, openblas, clblas.
  build_type: "openblas"
  debug: false
  cors: true
  cors_allow_origins: "*"
  galleries: []
  #  - name: model-gallery
  #    url: github:go-skynet/model-gallery/index.yaml
  preload_models: []
  #    url: github:go-skynet/model-gallery/gpt4all-j.yaml
  # UPLOAD_LIMIT
workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: http
              path: /readyz
            readiness:
              enabled: true
              type: http
              path: /readyz
            startup:
              enabled: true
              type: tcp
          imageSelector: image
          env:
            ADDRESS: ":{{ .Values.service.main.ports.main.port }}"
            MODELS_PATH: "{{ .Values.persistence.models.mountPath }}"
            IMAGE_PATH: "{{ .Values.persistence.images.mountPath }}"
            BUILD_TYPE: "{{ .Values.localai.build_type }}"
            # breaks chart if true, keep it false.
            REBUILD: false
            DEBUG: "{{ .Values.localai.debug }}"
            CORS: "{{ .Values.localai.cors }}"
            GALLERIES: "{{ toJson .Values.localai.galleries }}"
            PRELOAD_MODELS: "{{ toJson .Values.localai.preload_models }}"
            CORS_ALLOW_ORIGINS: "{{ .Values.localai.cors_allow_origins }}"
persistence:
  models:
    enabled: true
    mountPath: "/models"
  images:
    enabled: true
    mountPath: "/images"
portal:
  open:
    enabled: false
updated: true
